#include<stdio.h>
#include<stdlib.h>
#define INFINITY 100000

int minCostVertex(int value[], int visited[], int v){
    int min = INFINITY,index;
    for(int i = 0; i<v;i++){
        if(min > value[i] && visited[i] == 0){
        min = value[i];
        index=i;
        }
    }
    return index;
}
void dijsktras(int graph[][100],int v){
    int value[v], visited[v], parent[v];
    for(int i=0;i<v;i++){
        value[i] = INFINITY;
        visited[i] = 0;
        parent[i] = -1;
    }
    value[0]=0;
    for(int i=0;i<(v - 1);i++){
        int u = minCostVertex(value, visited, v);
        visited[u] = 1;
        for(int j = 0; j < v; j++){
            if(graph[u][j] != 0 && visited[j] != 1 && graph[u][j] + value[u]< value[j] && value[u]!=INFINITY){
                value[j] = graph[u][j] + value[u];
                parent[j] = u; 
            }
        }
        
    }
     printf("\n");
    for(int i=0;i<v;i++){
        if(parent[i] != -1){
        printf("%d - %d   %d\n", parent[i],i,value[i]);
        }
        
    }
     printf("\n");
}
void main(){
    int v= 9;
    printf("enter no of vertices");
    printf("graph size:");
    
    int graph[100][100]={ { 0, 4, 0, 0, 0, 0, 0, 8, 0 },
                        { 4, 0, 8, 0, 0, 0, 0, 11, 0 },
                        { 0, 8, 0, 7, 0, 4, 0, 0, 2 },
                        { 0, 0, 7, 0, 9, 14, 0, 0, 0 },
                        { 0, 0, 0, 9, 0, 10, 0, 0, 0 },
                        { 0, 0, 4, 14, 10, 0, 2, 0, 0 },
                        { 0, 0, 0, 0, 0, 2, 0, 1, 6 },
                        { 8, 11, 0, 0, 0, 0, 1, 0, 7 },
                        { 0, 0, 2, 0, 0, 0, 6, 7, 0 } };
                        
                        
    //             { { 0, 1, 4, 0, 0, 0},
    //             { 1, 0, 4, 2, 7, 0 },
    //             { 4, 4, 0, 3, 5, 0},
    //             { 0, 2, 3, 0, 4, 6 },
    //             { 0, 7, 5, 4, 0, 7 },
    //             { 0, 0, 0, 6, 7, 0},};
    
    
    
    dijsktras(graph,v);
    for(int i=0;i<v;i++){
        for(int j =0;j<v;j++){
            printf("%d ",graph[i][j]);
        }
        printf("\n");
    }
}

