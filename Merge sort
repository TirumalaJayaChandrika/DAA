#include<stdio.h>
void merge(int a[],int l,int m,int r){
    int n1=m-l+1,n2=r-m;
    int i=0,j=0,k=0;
    int left[n1],right[n2];
    for(int i=0;i<n1;i++){
        left[i]=a[l+i];
    }
    for(int j=0;j<n2;j++ ){
        right[j]=a[m+1+j];
    }
    i=0,j=0,k=l;
    while(i<n1 && j<n2){
        if(left[i]>right[j]){
            a[k++]=right[j++];
        }else{
            a[k++]=left[i++];
        }
    }
    while(i < n1){
        a[k++]=left[i++];
    }
    while(j<n2){
        a[k++]=right[j++];
    }

}
void mergesort(int a[],int l,int r){
    
    if(l<r){
        int m=(r+l)/2;
        mergesort(a,l,m);
        mergesort(a,m+1,r);
        merge(a,l,m,r);
        for(int i=0;i<10;i++){
        printf("%d ",a[i]);

    }
    printf("\n");

    }
}
int main(){
    int n;
    printf("enter size");
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++){
        printf("enter");
        scanf("%d",&a[i]);
    }
    

    mergesort(a,0,n-1);
    printf("Final array:\n");
    for(int i=0;i<n;i++){
        printf("%d ",a[i]);

    }
}


output:

enter size10
enter2
enter8
enter45
enter1
enter7
enter4
enter3
enter90
enter12
enter6
2 8 45 1 7 4 3 90 12 6 
2 8 45 1 7 4 3 90 12 6
2 8 45 1 7 4 3 90 12 6
1 2 7 8 45 4 3 90 12 6 
1 2 7 8 45 3 4 90 12 6
1 2 7 8 45 3 4 90 12 6
1 2 7 8 45 3 4 90 6 12
1 2 7 8 45 3 4 6 12 90
1 2 3 4 6 7 8 12 45 90
Final array:
1 2 3 4 6 7 8 12 45 90 
