#include<stdio.h>
#include<stdbool.h>

#define v 5
int parent[v],value[v];
    bool mst[v];
int minCostVertex(int value[], bool mst[]){
    int m = __INT_MAX__,index;
    for(int i=0;i<v;i++){
        if(mst[i]==false && value[i]<m){
            m = value[i];
            index = i;
        }
    }
    return index;
}
void primMST(int graph[v][v]){
    
    for(int i=0;i<v;i++){
        mst[i]=false;
        value[i] = __INT_MAX__;
        parent[i]=-1;
    }
    value[0]=0;
    for(int i=0;i<v-1;i++){
        int u = minCostVertex(value, mst);
    
        
        mst[u] = true;
        for(int j=0;j<v;j++){
            if(graph[u][j] != 0 && mst[j] == false && graph[u][j]<value[j]){
                parent[j]=u;
                value[j]=graph[u][j];
                
            }
        }
    }
    
    printf("\n");
    for(int i=1;i<v;i++){
        printf("%d-%d %d\n",parent[i],i,value[i]);
    }
}
void main(){
    int graph[v][v]= { { 0, 2, 0, 6, 0 },
                        { 2, 0, 3, 8, 5 },
                        { 0, 3, 0, 0, 7 },
                        { 6, 8, 0, 0, 9 },
                        { 0, 5, 7, 9, 0 } };
    primMST(graph); 
    int c;                  
    for(int i=0;i<v;i++){
        c+=value[i];
    }
    printf("cost: %d",c);
}
