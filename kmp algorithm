#include <stdio.h>
#include <string.h>

void computepattern(char* pat,int m, int* lps){
   
    int len = 0;
    lps[0]  = 0;
    int i =1;
    while(i < m){
        if(pat[i] == pat[len]){
            len++;
            lps[i] = len;
            i++;
        }else{
            if(len != 0){
                len  = lps[len - 1];
            }else{
                lps[i] = 0;
                i++;
            }
        }
    }
    printf("pattern :");
    for(int i =0 ;i<m; i++){
        printf("%d ",lps[i]);

    }
}
void kmp(char* pat, char* txt){
   
    int n = strlen(txt);
    int m = strlen(pat);
     int lps[m];
    computepattern(pat,m, lps);
    int i = 0, j = 0;
    while((n - i) >= (m-j)){
        if(pat[j] == txt[i]){
            i++;
            j++;
        }
        if( j == m){
            printf("\npattern found at found at %d",i-j);
            break;
        }else if(i < n && pat[j] != txt[i]){
            if(j != 0)
            j = lps[j-1];
            else
            i++;
        }
    }

}
void main(){
    char *pat ="ABABCABAB", *txt ="ABABDABACDABABCABAB";
    kmp(pat,txt);
}
